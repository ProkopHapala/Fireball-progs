# SGI 
ifneq (,$(findstring SGI, ${MACHINE}))
	F77 = ifort
	F90 = ifort
#	PATH_MKL_LIB = 	/opt/intel/mkl/10.0.1.015/lib/em64t
#	PATH_MKL_INCL = /opt/intel/mkl/10.0.1.015/include
#	PATH_FFTW_LIB = /opt/intel/mkl/10.0.1.015/lib/em64t
	PATH_MKL =  /opt/intel/Compiler/11.1/064/mkl/lib/em64t/	
#	PATH_MKL_LIB = /opt/intel/Compiler/11.1/064/mkl/lib/em64t/ 
	PATH_MKL_INCL = /opt/intel/Compiler/11.1/064/mkl/include/ 
	PATH_FFTW_LIB = /opt/intel/Compiler/11.1/064/mkl/lib/em64t/
	PATH_FFTW_INCL = -I${PATH_FFTW_LIB}/include/fftw

	ifneq (,$(findstring OPT, ${MODE}))
		ifneq (,$(findstring YES, ${CCOMPILE}))
# Pvl			FFLAGS = -O3 -r8 -fno-alias -unroll -fpp -DCCOMPILE -no-ipo
# Pvl			DFLAGS = -r8 -w90 -tpp7 -O3 -mp1 -fno-alias -unroll -no-ipo
			FFLAGS = -O3 -r8  -fno-alias -unroll -static -pg
			DFLAGS = -O3 -r8  -fno-alias -unroll -static -pg
#			FFLAGS = -r8 -O3 -fno-alias -unroll -fpp -DCCOMPILE 
#			DFLAGS = -r8 -w90 -tpp7 -O3 -mp1 -fno-alias -unroll
		else
			FFLAGS = -r8 -O2 -funroll-loops -mtune=pentium4 -assume byterecl -align -pad 
#			FFLAGS = -r8 -O3 -tpp7 -ipo -axP
			DFLAGS = -r8 -w90 -tpp7 -mp1 -fno-alias -unroll -no-ipo
		endif
	endif
	ifneq (,$(findstring DEBUG, ${MODE}))
		FFLAGS = -g -r8 -check all -fpp  -check output_conversion -check format -no-ipo -g
		DFLAGS = -g -r8 -check all -mp1 
		LFLAGS = 
	endif
# standard LAPACK library
	ifneq (,$(findstring YES,${USEBLAS}))
# MacOS X MKL 10.0.4.022 (only MKL)
#		LFLAGS = -L/Library/Frameworks/Intel_MKL.framework/Versions/Current/lib/32 -lmkl_intel -lmkl_intel_thread -lmkl_core  -lguide -lpthread 

# Marylou4 (MKL + FFTW3)
#		LFLAGS = -L${PATH_MKL} \
#		 -I${PATH_MKL_INCL} -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread \
#		 -L${PATH_MKL} ${PATH_FFTW_INCL} -lfftw3xf_intel -lm 

# Dec 08 
		LFLAGS = -I${PATH_MKL_INCL} -L${PATH_MKL} \
			-Wl,--start-group -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core \
			-Wl,--end-group -liomp5 -lpthread \
			${PATH_FFTW_INCL} -lfftw3xf_intel  -lm 
#			-L${PATH_MKL} ${PATH_FFTW_INCL} -lfftw3xf_intel -lm 
		BLAS = 
	endif
	ifneq (,$(findstring NO, ${USEBLAS}))
		ifneq (,$(findstring NO, ${CCOMPILE}))
#			LFLAGS = -static
		endif
		BLAS = blas.o minilapack.o
	endif
# LAPACK95 library
        ifneq (,$(findstring LAPACK95 ,${METHOD}))
                LFLAGS = -llapack \
                        -L/usr/lib/gcc-lib/i386-redhat-linux/3.2.2 \
                        -lg2c \
			-L/usr/local/lib -llapack95
		MODLAP95   = -I/usr/local/lib/lapack95_modules
                BLAS = -lblas
        endif 
# FIX ME - ADD CORRECT PATHS FOR MPI STUFF TO RUN PARALLEL CODE
        ifneq (,$(findstring OPENMP, ${PARALLEL}))
		F90 = ifort
		F77 = ifort

		ifneq (,$(findstring OPT, ${MODE}))
		  FFLAGS = -O3 -r8 -tpp7 -openmp -opt_report -openmp_profile \
			-assume cc_omp -fpp
		endif 
		ifneq (,$(findstring DEBUG, ${MODE}))
#		  FFLAGS = -g -check all -r8 -openmp -opt_report \
			-openmp_profile -assume cc_omp -fpp
		  FFLAGS = -g -check all -openmp -opt_report \
			-openmp_profile -assume cc_omp -fpp
		endif 
	endif
	ifneq (,$(findstring SCALAPACK, ${METHOD}))
		F77 = mpif90
		F90 = mpif90
#  above two lines are also possible
#               F77 = mpiifort
#               F90 = mpiifort
# Scalapack & mpi_intel for Dorje
#		PATH_FFTW_LIB = /opt/intel/mkl/10.1.0.015
		PATH_FFTW_LIB = /opt/intel/Compiler/11.1/064/mkl/lib/em64t
		PATH_FFTW_INCL = -I${PATH_FFTW_LIB}/include/fftw
		PATH_MPI_LIB = /usr/openmpi/lib
		PATH_MPI_INC = /usr/openmpi/include
#               PATH_MPI_LIB = /usr/mpi/openmpi-1.2-2/intel/lib64
#               PATH_MPI_INC = /usr/mpi/openmpi-1.2-2/intel/include
#               PATH_MPI_LIB = /usr/mpi/mvapich2-1.0-1/intel/lib
#               PATH_MPI_INC = /usr/mpi/mvapich2-1.0-1/intel/include
		LFLAGS = -static-intel -L /opt/intel/Compiler/11.1/064/mkl/lib/em64t/ \
			-lmkl_scalapack_lp64 \
			-lmkl_blacs_openmpi_lp64 \
			-lmkl_lapack -lmkl_intel_lp64 -lmkl_intel_thread \
			-lmkl_core -liomp5 -lpthread \
			-L${PATH_FFTW_LIB} ${PATH_FFTW_INCL} -L${PATH_MKL}  -lfftw3xf_intel  \
			-lm -lmkl_em64t \
			-Bdynamic -L${PATH_MPI_LIB} -I${PATH_MPI_INC} \
			-lmpi
# line above includes bare options, further optimization is desired
		FFLAGS =  -r8 -O2  -funroll-loops -mtune=pentium4 \
			-assume byterecl -align -pad -static-intel
		DFLAGS =  -r8 -O2  -funroll-loops -mtune=pentium4 \
			-assume byterecl -align -pad -static-intel
		PFLAGS =  -r8 -O2 -funroll-loops -mtune=pentium4 \
			-assume byterecl -align -pad -static-intel -openmp
	endif
	ifneq (,$(findstring MPICH, ${PARALLEL}))
		MODMPI  = -I/usr/local/mpich/include
		F77 = mpif90
		F90 = mpif90
	endif
	CC = icc
	CFLAGS = ${FFLAGS}
#       ifneq (,$(findstring ORDERN, ${METHOD}))
#               PARLFLAGS = -lmpi
#       endif
endif
